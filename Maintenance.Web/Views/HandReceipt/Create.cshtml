@model CreateHandReceiptDto
@{
    ViewData["Title"] = Messages.HandReceipts;
}

<div class="card card-custom">
    <div class="card-header flex-wrap border-0 pt-6 pb-0">
        <div class="card-title">
            <h3 class="card-label">
                @Messages.HandReceipts
                <span class="d-block text-muted pt-2 font-size-sm">@Messages.FillRequiredData</span>
            </h3>
        </div>
        <div class="card-toolbar">
            <!--begin::Button-->
            <button type="button" class="btn btn-primary font-weight-bolder mr-2" data-toggle="modal" data-target="#AddItemModal">
                <span class="svg-icon svg-icon-md">
                    <!--begin::Svg Icon | path:assets/media/svg/icons/Design/Flatten.svg-->
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <rect x="0" y="0" width="24" height="24" />
                            <circle fill="#000000" cx="9" cy="15" r="6" />
                            <path d="M8.8012943,7.00241953 C9.83837775,5.20768121 11.7781543,4 14,4 C17.3137085,4 20,6.6862915 20,10 C20,12.2218457 18.7923188,14.1616223 16.9975805,15.1987057 C16.9991904,15.1326658 17,15.0664274 17,15 C17,10.581722 13.418278,7 9,7 C8.93357256,7 8.86733422,7.00080962 8.8012943,7.00241953 Z" fill="#000000" opacity="0.3" />
                        </g>
                    </svg>
                    <!--end::Svg Icon-->
                </span>@Messages.Create
            </button>
            <!--end::Button-->
        </div>
    </div>
    <div class="card-body">
        <div class="mb-7">
            <form asp-action="Create" method="post" enctype="multipart/form-data">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>@Messages.ExistsOrNewCustomer</label>
                            <select asp-for="CreateCustomerType" id="SelectExistsOrNewCustomer" class="form-control form-control-solid">
                                <option value="">-- @string.Format(Messages.Select, Messages.ExistsOrNewCustomer) --</option>
                                <option value="@CreateCustomerType.Exists">@Messages.Exists</option>
                                <option value="@CreateCustomerType.New">@Messages.New</option>
                            </select>
                            <span asp-validation-for="CreateCustomerType" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div id="ExistsCustomerRow" class="row" style="display: none;">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>@Messages.Customer</label>
                            <select asp-for="CustomerId" id="SelectCustomer" class="form-control form-control-solid">
                                <option value="">-- @string.Format(Messages.Select, Messages.Customer) --</option>
                            </select>
                            <span asp-validation-for="CustomerId" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div id="NewCustomerRow" class="row" style="display: none;">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>@Messages.CustomerFullName</label>
                            <input asp-for="CustomerInfo.Name" placeholder="@string.Format(Messages.Enter,Messages.CustomerFullName)" class="form-control form-control-solid" />
                            <span asp-validation-for="CustomerInfo.Name" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>@Messages.CustomerPhoneNumber</label>
                            <input asp-for="CustomerInfo.PhoneNumber" placeholder="@string.Format(Messages.Enter,Messages.CustomerPhoneNumber)" class="form-control form-control-solid" />
                            <span asp-validation-for="CustomerInfo.PhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <p class="h3">@Messages.HandReceiptItems</p>
                <!--begin: Datatable-->
                <div class="datatable datatable-head-custom" id="kt_datatable"></div>
                <!--end: Datatable-->

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary font-weight-bold mr-2">@Messages.Submit</button>
                    <a href="/HandReceipt/Index" class="btn btn-light-primary font-weight-bold">@Messages.Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" data-toggle="PopUp" data-target="modal" id="AddItemModal" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Messages.Create</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i aria-hidden="true" class="ki ki-close"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="AddItemForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>@Messages.Item</label>
                                <select id="SelectItem" class="form-control form-control-solid">
                                    <option value="">-- @string.Format(Messages.Select, Messages.Item) --</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>@Messages.Company</label>
                                <select id="SelectCompany" class="form-control form-control-solid">
                                    <option value="">-- @string.Format(Messages.Select, Messages.Company) --</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>@Messages.Color</label>
                                <select id="SelectColor" class="form-control form-control-solid">
                                    <option value="">-- @string.Format(Messages.Select, Messages.Color) --</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>@Messages.Description</label>
                                <textarea id="Description" placeholder="@string.Format(Messages.Enter,Messages.Description)" class="form-control form-control-solid"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Messages.SpecifiedCost</label>
                                <input type="number" id="SpecifiedCost" placeholder="@string.Format(Messages.Enter,Messages.SpecifiedCost)" class="form-control form-control-solid" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Messages.From</label>
                                <input type="number" id="CostFrom" placeholder="@string.Format(Messages.Enter,Messages.From)" class="form-control form-control-solid" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Messages.To</label>
                                <input type="number" id="CostTo" placeholder="@string.Format(Messages.Enter,Messages.To)" class="form-control form-control-solid" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Messages.WarrantyExpiryDate</label>
                                <input type="date" id="WarrantyExpiryDate" placeholder="@string.Format(Messages.Enter,Messages.WarrantyExpiryDate)" class="form-control form-control-solid" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Messages.NotifyCustomerOfTheCost</label>
                                <input type="checkbox" id="NotifyCustomerOfTheCost" placeholder="@string.Format(Messages.Enter,Messages.NotifyCustomerOfTheCost)" class="form-control form-control-solid" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>@Messages.Urgent</label>
                                <input type="checkbox" id="Urgent" placeholder="@string.Format(Messages.Enter,Messages.Urgent)" class="form-control form-control-solid" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="AddItemBtn" type="button" class="btn btn-primary font-weight-bold mr-2">@Messages.Submit</button>
                        <button type="button" data-dismiss="modal" class="btn btn-light-primary font-weight-bold">@Messages.Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        PageLoadActions();

        $.ajax({
            url: '/Customer/List',
            dataType: "json",
            success: function(data) {
                $(data).each(function(index, value) {
                    $("#SelectCustomer").append($("<option></option>").val(value.id).html(value.name));
                });
            }
        });

        $('#SelectExistsOrNewCustomer').on('change', function() {
            var selectedOption = this.value;
            if (selectedOption == 'Exists') {
                $('#NewCustomerRow').hide();
                $('#ExistsCustomerRow').show();
            } else if (selectedOption == 'New') {
                $('#ExistsCustomerRow').hide();
                $('#NewCustomerRow').show();
            }
        });

        var itemsArr = [];
        $.ajax({
            url: '/Item/List',
            dataType: "json",
            success: function(data) {
                $(data).each(function(index, value) {
                    $("#SelectItem").append($("<option></option>").val(value.id).html(value.name));
                    itemsArr.push(value);
                });
            }
        });

        var companiesArr = [];
        $.ajax({
            url: '/Company/List',
            dataType: "json",
            success: function(data) {
                $(data).each(function(index, value) {
                    $("#SelectCompany").append($("<option></option>").val(value.id).html(value.name));
                    companiesArr.push(value);
                });
            }
        });

        var colorsArr = [];
        $.ajax({
            url: '/Color/List',
            dataType: "json",
            success: function(data) {
                $(data).each(function(index, value) {
                    $("#SelectColor").append($("<option></option>").val(value.id).html(value.name));
                    colorsArr.push(value);
                });
            }
        });

        'use strict';
        // Class definition

        var KTDatatableDataLocalDemo = function() {
            // Private functions
            // demo initializer
            var demo = function() {
                var handReceiptItemsArr = [];

                var handReceiptItemTest =
                {
                    itemId: "Test",
                    item: "Test",
                    colorId: "Test",
                    color: "Test",
                    companyId: "Test",
                    company: "Test",
                    description: "Test",
                    specifiedCost: "Test",
                    costFrom: "Test",
                    costTo: "Test",
                    warrantyExpiryDate: "Test",
                    notifyCustomerOfTheCost: "Test",
                    urgent: "Test"
                };
                handReceiptItemsArr.push(handReceiptItemTest);
                
                var datatable = $('#kt_datatable').KTDatatable({
                    // datasource definition
                    data: {
                        type: 'local',
                        source: handReceiptItemsArr,
                    },

                    // layout definition
                    layout: {
                        scroll: true, // enable/disable datatable scroll both horizontal and vertical when needed.
                        // height: 450, // datatable's body's fixed height
                        footer: false, // display/hide footer
                    },

                    // column sorting
                    sortable: true,

                    pagination: false,

                    search: {
                        input: $('#kt_datatable_search_query'),
                        key: 'generalSearch',
                    },

                    // columns definition
                    columns: [
                        {
                            field: 'item',
                            title: '@Messages.Item',
                            sortable: false,
                            autoHide: false,
                            width: 100
                        },
                        {
                            field: 'company',
                            title: '@Messages.Company',
                            sortable: false,
                            width: 100
                        },
                        {
                            field: 'color',
                            title: '@Messages.Color',
                            sortable: false,
                            width: 100
                        },
                        {
                            field: 'description',
                            title: '@Messages.Description',
                            sortable: false,
                            width: 100
                        },
                        {
                            field: 'specifiedCost',
                            title: '@Messages.SpecifiedCost',
                            sortable: false,
                            width: 100
                        },
                        {
                            field: 'notifyCustomerOfTheCost',
                            title: '@Messages.NotifyCustomerOfTheCost',
                            sortable: false,
                            width: 100,
                            template: function(data) {
                                if (data.notifyCustomerOfTheCost) {
                                    return "@Messages.Yes";
                                } else {
                                    return "@Messages.No";
                                }
                            }
                        },
                        {
                            field: 'costFrom',
                            title: '@Messages.From',
                            sortable: false,
                            width: 100
                        },
                        {
                            field: 'costTo',
                            title: '@Messages.To',
                            sortable: false,
                            width: 100
                        },
                        {
                            field: 'urgent',
                            title: '@Messages.Urgent',
                            sortable: false,
                            width: 100,
                            template: function(data) {
                                if (data.urgent) {
                                    return "@Messages.Yes";
                                } else {
                                    return "@Messages.No";
                                }
                            }
                        },
                        {
                            field: 'warrantyExpiryDate',
                            title: '@Messages.WarrantyExpiryDate',
                            sortable: false,
                            width: 100
                        }
                    ],
                });

                $('#AddItemBtn').click(function() {
                    var itemId = $('#SelectItem').val();
                    var itemObj = itemsArr.find(obj => {
                        return obj.id == itemId;
                    });

                    var companyId = $('#SelectCompany').val();
                    var companyObj = companiesArr.find(obj => {
                        return obj.id == companyId;
                    });

                    var colorId = $('#SelectColor').val();
                    alert(colorId);
                    var colorObj = colorsArr.find(obj => {
                        return obj.id == colorId;
                    });
                    console.log(colorObj);

                    var description = $('#Description').val();
                    var specifiedCost = $('#SpecifiedCost').val();
                    var costFrom = $('#CostFrom').val();
                    var costTo = $('#CostTo').val();
                    var warrantyExpiryDate = $('#WarrantyExpiryDate').val();
                    var notifyCustomerOfTheCost = $('#NotifyCustomerOfTheCost').val();
                    var urgent = $('#Urgent').val();

                    var handReceiptItem =
                    {
                        itemId: itemId,
                        item: itemObj.name,
                        colorId: colorId,
                        color: colorObj.name,
                        companyId: companyId,
                        company: companyObj.name,
                        description: description,
                        specifiedCost: specifiedCost,
                        costFrom: costFrom,
                        costTo: costTo,
                        warrantyExpiryDate: warrantyExpiryDate,
                        notifyCustomerOfTheCost: notifyCustomerOfTheCost,
                        urgent: urgent
                    }

                    handReceiptItemsArr.push(handReceiptItem);

                    var tname = $('.ajaxForm').attr("tname");
                    var fname = $('.ajaxForm').attr("fname");
                    if (fname != null) {
                        eval(fname);
                    }
                    $('#kt_datatable').KTDatatable().reload();
                    if (!$("#tblItems").hasClass("autohide")) {
                        $("#AddItemForm").resetForm();
                        $("#tblItems tbody tr").remove();
                        $("#tblItems").addClass("hidden").next().show();
                    }
                    else {
                        $(".select2").val('').change();
                    }

                    $("#AddItemModal").modal("hide");

                    console.log(handReceiptItemsArr);
                });
            };

            return {
                // Public functions
                init: function() {
                    // init dmeo
                    demo();
                },
            };
        }();

        jQuery(document).ready(function() {
            KTDatatableDataLocalDemo.init();
        });

    </script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
}




